
@article{erwig_functional_2006,
	title = {Functional pearls: Probabilistic functional programming in Haskell},
	volume = {16},
	url = {http://web.engr.oregonstate.edu/~erwig/papers/abstracts.html#JFP06a},
	shorttitle = {Functional pearls},
	pages = {21--34},
	number = {1},
	journaltitle = {Journal of Functional Programming},
	author = {Erwig, Martin and Kollmansberger, Steve},
	urldate = {2016-09-29},
	date = {2006},
	file = {[PDF] icerote.net:files/500/ERWIG and KOLLMANSBERGER - FUNCTIONAL PEARLS Probabilistic functional program.pdf:application/pdf;[PDF] icerote.net:files/2204/ERWIG and KOLLMANSBERGER - FUNCTIONAL PEARLS Probabilistic functional program.pdf:application/pdf;Snapshot:files/632/2634344.html:text/html;Snapshot:files/2211/2634344.html:text/html;Snapshot:files/2213/citation.html:text/html;Snapshot:files/2214/1.html:text/html;Snapshot:files/2215/1.html:text/html;Snapshot:files/2216/item.html:text/html;Snapshot:files/2217/8DF2F2B191C68260A961BA3A9F50B332.html:text/html}
}

@unpublished{kidd_build_2007,
	title = {Build your own probability monads},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.129.9502&rep=rep1&type=pdf},
	author = {Kidd, Eric},
	urldate = {2016-09-29},
	date = {2007-10-02},
	file = {[PDF] psu.edu:files/530/Kidd - Build your own probability monads.pdf:application/pdf}
}

@unpublished{larsen_memory_2011,
	title = {Memory Efficient Implementation of Probability Monads},
	url = {http://www.diku.dk/~kflarsen/t/ProbMonad-unpublished.pdf},
	author = {Larsen, Ken Friis},
	urldate = {2016-09-29},
	date = {2011-08},
	file = {[PDF] diku.dk:files/542/Larsen - Memory efficient implementation of probability mon.pdf:application/pdf}
}

@online{dominus_monad_2009,
	title = {A monad for probability and provenance},
	url = {http://blog.plover.com/prog/haskell/probmonad.html},
	shorttitle = {The Universe of Discourse},
	titleaddon = {The Universe of Discourse},
	author = {Dominus, Mark},
	urldate = {2016-09-29},
	date = {2009-12-31},
	file = {Snapshot:files/556/probmonad.html:text/html}
}

@incollection{droste_semirings_2009,
	title = {Semirings and Formal Power Series},
	volume = {1},
	rights = {©2009 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-642-01491-8 978-3-642-01492-5},
	url = {http://staff.mmcs.sfedu.ru/~ulysses/Edu/Marktoberdorf_2009/working_material/Esparsa/Kuich.%20Semirings%20and%20FPS.pdf},
	series = {Monographs in Theoretical Computer Science. An {EATCS} Series},
	abstract = {This chapter presents basic foundations for the theory of weighted automata: semirings and formal power series. A fundamental question is how to extend the star operation (Kleene iteration) from languages to series. For this, we investigate ordered, complete and continuous semirings and the related concepts of star semirings and Conway semirings. We derive natural properties for the Kleene star of cycle-free series and also of matrices often used to analyze the behavior of weighted automata. Finally, we investigate cycle-free linear equations which provide a useful tool for proving identities for formal power series.},
	pages = {3--28},
	booktitle = {Handbook of Weighted Automata},
	publisher = {Springer Berlin Heidelberg},
	author = {Droste, Manfred and Kuich, Werner},
	editor = {Droste, Manfred and Kuich, Werner and Vogler, Heiko},
	urldate = {2016-10-31},
	date = {2009},
	langid = {english},
	note = {{DOI}: 10.1007/978-3-642-01492-5\_1},
	keywords = {Computation by Abstract Devices, Language Translation and Linguistics, Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Mathematical Logic and Foundations, Theory of Computation},
	file = {[PDF] sfedu.ru:files/1433/Droste and Kuich - Semirings and Formal Power Series.pdf:application/pdf}
}

@inproceedings{dolan_fun_2013,
	title = {Fun with semirings: a functional pearl on the abuse of linear algebra},
	volume = {48},
	url = {http://dl.acm.org/citation.cfm?id=2500613},
	shorttitle = {Fun with semirings},
	pages = {101--110},
	booktitle = {{ACM} {SIGPLAN} Notices},
	publisher = {{ACM}},
	author = {Dolan, Stephen},
	urldate = {2016-10-31},
	date = {2013},
	file = {[PDF] cam.ac.uk:files/1468/Dolan - Fun with Semirings.pdf:application/pdf;[PDF] cam.ac.uk:files/1470/Dolan - Fun with Semirings.pdf:application/pdf;[PDF] semanticscholar.org:files/1466/Dolan - Fun with Semirings.pdf:application/pdf;Snapshot:files/1471/citation.html:text/html}
}

@inproceedings{rivas_monoids_2015,
	title = {From monoids to near-semirings: the essence of {MonadPlus} and Alternative},
	url = {http://www.fceia.unr.edu.ar/~mauro/pubs/FromMonoidstoNearsemirings.pdf},
	shorttitle = {From monoids to near-semirings},
	abstract = {It is well-known that monads are monoids in the category of endo-functors, and in fact so are applicative functors. Unfortunately, the benefits of this unified view are lost when the additional non-determinism structure of {\textbar}{MonadPlus}{\textbar} or {\textbar}Alternative{\textbar} is required.

This article recovers the essence of these two type classes by extending monoids to near-semirings with both additive and multiplicative structure. This unified algebraic view enables us to generically define the free construction as well as a novel double Cayley representation that optimises both left-nested sums and left-nested products.},
	pages = {196--207},
	booktitle = {Proceedings of the 17th International Symposium on Principles and Practice of Declarative Programming},
	publisher = {{ACM}},
	author = {Rivas, Exequiel and Jaskelioff, Mauro and Schrijvers, Tom},
	urldate = {2016-10-31},
	date = {2015},
	note = {https://www.reddit.com/r/haskell/comments/3dlz6b/from\_monoids\_to\_nearsemirings\_the\_essence\_of/?},
	file = {[PDF] unr.edu.ar:files/1525/Rivas et al. - From monoids to near-semirings the essence of Mon.pdf:application/pdf}
}

@article{mu_programming_2012,
	title = {Programming from Galois connections},
	volume = {81},
	url = {http://www.iis.sinica.edu.tw/~scm/pub/gc-jlap.pdf},
	pages = {680--704},
	number = {6},
	journaltitle = {Journal of Logic and Algebraic Programming},
	author = {Mu, Shin-Cheng and Oliveira, José Nuno Fonseca},
	urldate = {2016-11-01},
	date = {2012},
	file = {[HTML] sciencedirect.com:files/1680/S1567832612000525.html:text/html;[PDF] psu.edu:files/1677/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] sinica.edu.tw:files/1671/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] sinica.edu.tw:files/1679/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] uminho.pt:files/1673/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;[PDF] uminho.pt:files/1675/Mua and Oliveirab - Programming from Galois Connections.pdf:application/pdf;Snapshot:files/1681/bwmeta1.element.html:text/html;Snapshot:files/1682/24608.html:text/html}
}

@inproceedings{green_provenance_2007,
	title = {Provenance Semirings},
	url = {http://db.cis.upenn.edu/DL/07/pods07.pdf},
	pages = {31--40},
	booktitle = {Proceedings of the twenty-sixth {ACM} {SIGMOD}-{SIGACT}-{SIGART} symposium on Principles of database systems},
	publisher = {{ACM}},
	author = {Green, Todd J. and Karvounarakis, Grigoris and Tannen, Val},
	urldate = {2016-11-01},
	date = {2007},
	file = {[PDF] upenn.edu:files/1715/Green et al. - 2007 - Provenance Semirings.pdf:application/pdf}
}

@article{bistarelli_semiring-based_1997,
	title = {Semiring-based constraint satisfaction and optimization},
	volume = {44},
	url = {http://dl.acm.org/citation.cfm?id=256306},
	pages = {201--236},
	number = {2},
	journaltitle = {Journal of the {ACM} ({JACM})},
	author = {Bistarelli, Stefano and Montanari, Ugo and Rossi, Francesca},
	urldate = {2016-11-01},
	date = {1997},
	file = {[PDF] psu.edu:files/1742/BISTARELLI et al. - 1997 - Semiring-Based Constraint Satisfaction and Optimiz.pdf:application/pdf;Snapshot:files/1745/citation.html:text/html}
}

@inproceedings{bistarelli_semiring-based_2001,
	title = {Semiring-Based Constraint Logic Programming: Syntax and Semantics},
	volume = {23},
	url = {http://www.academia.edu/download/34297968/toplas.pdf},
	shorttitle = {Semiring-based constraint logic programming},
	pages = {1--29},
	booktitle = {{ACM} Transactions on Programming Languages and Systems ({TOPLAS})},
	publisher = {Citeseer},
	author = {Bistarelli, Stefano and Montanari, Ugo and Rossi, Francesca},
	urldate = {2016-11-01},
	date = {2001},
	file = {[PDF] emu.edu.tr:files/1759/BISTARELLI et al. - 2001 - Semiring-Based Constraint Logic Programming Synta.pdf:application/pdf}
}

@article{shan_monads_2002,
	title = {Monads for natural language semantics},
	url = {http://arxiv.org/abs/cs/0205026},
	abstract = {Accounts of semantic phenomena often involve extending types of meanings and revising composition rules at the same time. The concept of monads allows many such accounts -- for intensionality, variable binding, quantification and focus -- to be stated uniformly and compositionally.},
	journaltitle = {{arXiv}:cs/0205026},
	author = {Shan, Chung-chieh},
	urldate = {2016-11-01},
	date = {2002-05-17},
	eprinttype = {arxiv},
	eprint = {cs/0205026},
	keywords = {Computer Science - Computation and Language, Computer Science - Programming Languages, D.3.1, F.3.2, I.2.7},
	file = {arXiv\:cs/0205026 PDF:files/1773/Shan - 2002 - Monads for natural language semantics.pdf:application/pdf;arXiv.org Snapshot:files/1774/0205026.html:text/html}
}

@article{goodman_semiring_1999,
	title = {Semiring Parsing},
	volume = {25},
	url = {https://pdfs.semanticscholar.org/277b/475e46c2c4dd8e1d1420318472371af82888.pdf},
	pages = {573--605},
	number = {4},
	journaltitle = {Computational Linguistics},
	author = {Goodman, Joshua},
	urldate = {2016-11-02},
	date = {1999},
	file = {[PDF] semanticscholar.org:files/1812/Goodman - Semiring Parsing.pdf:application/pdf;Snapshot:files/1815/cat.inist.fr.html:text/html;Snapshot:files/1821/citation.html:text/html;Snapshot:files/1822/research.html:text/html}
}

@thesis{goodman_parsing_1998,
	title = {Parsing Inside-Out},
	url = {https://arxiv.org/abs/cmp-lg/9805007},
	abstract = {The inside-outside probabilities are typically used for reestimating Probabilistic Context Free Grammars ({PCFGs}), just as the forward-backward probabilities are typically used for reestimating {HMMs}. I show several novel uses, including improving parser accuracy by matching parsing algorithms to evaluation criteria; speeding up {DOP} parsing by 500 times; and 30 times faster {PCFG} thresholding at a given accuracy level. I also give an elegant, state-of-the-art grammar formalism, which can be used to compute inside-outside probabilities; and a parser description formalism, which makes it easy to derive inside-outside formulas and many others.},
	pagetotal = {257},
	institution = {Harvard University Cambridge, Massachusetts},
	type = {phdthesis},
	author = {Goodman, Joshua T.},
	urldate = {2016-11-02},
	date = {1998-05-19},
	file = {[PDF] semanticscholar.org:files/1833/Goodman - 1998 - Parsing Inside-Out.pdf:application/pdf}
}

@article{waldmann_efficient_2016,
	title = {Efficient Completion of Weighted Automata},
	url = {https://arxiv.org/abs/1609.03645},
	journaltitle = {{arXiv} preprint {arXiv}:1609.03645},
	author = {Waldmann, Johannes},
	urldate = {2016-11-02},
	date = {2016},
	file = {[PDF] arxiv.org:files/1857/Waldmann - 2016 - Efficient Completion of Weighted Automata.pdf:application/pdf;Snapshot:files/1858/1609.html:text/html}
}

@book{golan_semirings_1999,
	title = {Semirings and their Applications},
	url = {https://books.google.nl/books?hl=en&lr=&id=DNdTF_4PzpoC&oi=fnd&pg=PA1&ots=NJkLYAMVwu&sig=1yaUSRx1QpxfvKSEIXllAffGo3c},
	publisher = {Springer Science \& Business Media},
	author = {Golan, Jonathan S.},
	urldate = {2016-11-03},
	date = {1999},
	file = {Snapshot:files/2000/127907130.pdf:application/pdf;Snapshot:files/2001/127907130.pdf:application/pdf;Snapshot:files/2002/books.html:text/html;Snapshot:files/2003/MATH695_132_01_S1.pdf:application/pdf;Snapshot:files/2004/books.html:text/html;Snapshot:files/2005/undermaintenance.kfupm.edu.sa.html:text/html;Snapshot:files/2006/10.html:text/html;Snapshot:files/2007/10.html:text/html;Snapshot:files/2008/1620618.html:text/html}
}

@book{glazek_guide_2013,
	title = {A Guide to the Literature on Semirings and their Applications in Mathematics and Information Sciences: With Complete Bibliography},
	url = {https://books.google.nl/books?hl=en&lr=&id=dk3qCAAAQBAJ&oi=fnd&pg=PA2&ots=NhSkrJWf2_&sig=3A3ntVxl4_aIEUJIntZMb7cNQxY},
	shorttitle = {A Guide to the Literature on Semirings and their Applications in Mathematics and Information Sciences},
	publisher = {Springer Science \& Business Media},
	author = {Glazek, K.},
	urldate = {2016-11-03},
	date = {2013},
	file = {Snapshot:files/2011/books.html:text/html}
}

@inproceedings{statman_near_2014,
	title = {Near Semi-rings and Lambda Calculus},
	volume = {8560},
	url = {https://forum.tcs.uj.edu.pl/download.php?id=1713&sid=878ba18481e8017252ff293a128513ef},
	pages = {410},
	booktitle = {Rewriting and Typed Lambda Calculi: Joint International Conferences, {RTA} and {TLCA} 2014, Held as Part of the Vienna Summer of Logic, {VSL} 2014, Vienna, Austria, July 14-17, 2014, Proceedings},
	publisher = {Springer},
	author = {Statman, Rick},
	urldate = {2016-11-06},
	date = {2014},
	file = {statman2014.pdf:files/2044/statman2014.pdf:application/pdf}
}

@online{wu_conditional_2011,
	title = {The Conditional Choice Operator},
	url = {http://zenzike.com/posts/2011-08-01-the-conditional-choice-operator},
	author = {Wu, Nicolas},
	date = {2011-08-01}
}

@online{oconnor_very_2011,
	title = {A Very General Method of Computing Shortest Paths},
	url = {http://r6.ca/blog/20110808T035622Z.html},
	titleaddon = {Russell O'Connor's Blog},
	author = {O'Connor, Russell},
	date = {2011-08-08},
	file = {Snapshot:files/2055/20110808T035622Z.html:text/html}
}

@online{yorgey_network_2016,
	title = {The network reliability problem},
	url = {https://byorgey.wordpress.com/2016/02/19/the-network-reliability-problem/},
	abstract = {Let \$latex G = (V,E)\$ be a directed graph with vertices \$latex V\$ and edges \$latex E\$. Multiple edges between the same pair of vertices are allowed. For concreteness’ sake, think of the vertices as…},
	titleaddon = {blog :: Brent -{\textgreater} [String]},
	author = {Yorgey, Brent},
	urldate = {2016-11-06},
	date = {2016-02-19},
	file = {Snapshot:files/2053/the-network-reliability-problem.html:text/html}
}

@online{piponi_constraining_2010,
	title = {Constraining Types with Regular Expressions},
	url = {http://blog.sigfpe.com/2010/08/constraining-types-with-regular.html},
	abstract = {Structures with Constraints  Here's a picture of an element of a binary tree type:     The leaves correspond to elements and the letters ind...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2010-08-14},
	file = {Snapshot:files/2058/constraining-types-with-regular.html:text/html}
}

@online{piponi_more_2009,
	title = {More Parsing With Best First Search},
	url = {http://blog.sigfpe.com/2009/09/language-nomonomorphismrestrictiongener.html},
	abstract = {{\textgreater} \{-\# {LANGUAGE} {NoMonomorphismRestriction},{GeneralizedNewtypeDeriving} \#-\}   I have three goals in this post:  1. Refactoring the technique in...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2009-09-13},
	file = {Snapshot:files/2060/language-nomonomorphismrestrictiongener.html:text/html}
}

@online{piponi_monad_2009,
	title = {A Monad for Combinatorial Search with Heuristics},
	url = {http://blog.sigfpe.com/2009/07/monad-for-combinatorial-search-with.html},
	abstract = {Haskell provides a great way to perform combinatorial searching with backtracking: the list monad. Do-notation provides a nice {DSL} that make...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2009-07-04},
	file = {Snapshot:files/2062/monad-for-combinatorial-search-with.html:text/html}
}

@article{spivey_algebras_2009,
	title = {Algebras for combinatorial search},
	volume = {19},
	url = {https://pdfs.semanticscholar.org/0e59/fbb5bd4dab059e1736edb936d98ae0317efd.pdf},
	pages = {469--487},
	number = {3},
	journaltitle = {Journal of Functional Programming},
	author = {Spivey, J. Michael},
	urldate = {2016-11-06},
	date = {2009},
	file = {[PDF] semanticscholar.org:files/2087/Spivey - 2006 - Algebras for combinatorial search.pdf:application/pdf}
}

@online{piponi_formal_2005,
	title = {Formal Power Series and Haskell},
	url = {http://blog.sigfpe.com/2005/07/formal-power-series-and-haskell.html},
	abstract = {Haskell  is flavour of the month for me right now. Lots of mathematical algorithms that can be quite messy in an imperative language turn ou...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2005-07-15},
	file = {Snapshot:files/2102/formal-power-series-and-haskell.html:text/html}
}

@online{piponi_ambiguous_2006,
	title = {The ambiguous operator, pt.2},
	url = {http://blog.sigfpe.com/2006/02/ambiguous-operator-pt2.html},
	abstract = {In 1963 John {McCarthy}, the inventor of Lisp, published the paper A Basis for a Mathematical Theory of Computation  in which he proposed the ...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2006-02-26},
	file = {Snapshot:files/2104/ambiguous-operator-pt2.html:text/html}
}

@online{piponi_monads_2007,
	title = {Monads for vector spaces, probability and quantum mechanics pt. I},
	url = {http://blog.sigfpe.com/2007/02/monads-for-vector-spaces-probability.html},
	abstract = {I've been enjoying Eric Kidd's articles  on probability theory with Haskell. So I thought I'd follow them up with two things: (1) finding th...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2007-02-25},
	file = {Snapshot:files/2106/monads-for-vector-spaces-probability.html:text/html}
}

@online{piponi_why_2006,
	title = {Why isn't {ListT} [] a monad?},
	url = {http://blog.sigfpe.com/2006/11/why-isnt-listt-monad.html},
	abstract = {Well I'm back from my vacation . But this isn't my personal blog so I think it's time to dive right in. Anything to take my mind off these m...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2006-12-13},
	file = {Snapshot:files/2108/why-isnt-listt-monad.html:text/html}
}

@online{piponi_monads_2007-1,
	title = {Monads, Vector Spaces and Quantum Mechanics pt. {II}},
	url = {http://blog.sigfpe.com/2007/03/monads-vector-spaces-and-quantum.html},
	abstract = {Back from wordpress.com:  I had originally intended to write some code to simulate quantum computers and implement some quantum algorithms. ...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2007-03-06},
	file = {Snapshot:files/2110/monads-vector-spaces-and-quantum.html:text/html}
}

@online{piponi_fast_2009,
	title = {Fast incremental regular expression matching with monoids},
	url = {http://blog.sigfpe.com/2009/01/fast-incremental-regular-expression.html},
	abstract = {The Problem   Consider this problem: Fix a regular expression R. Suppose you have a string of length N. There's not much you can do about it...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-06},
	date = {2009},
	file = {Snapshot:files/2112/fast-incremental-regular-expression.html:text/html}
}

@online{kmett_modules_2011,
	title = {Modules and Functional Linear Functionals},
	url = {http://comonad.com/reader/2011/free-modules-and-functional-linear-functionals/},
	titleaddon = {The Comonad.Reader},
	author = {Kmett, Edward},
	urldate = {2016-11-06},
	date = {2011-07-11},
	file = {Snapshot:files/2114/free-modules-and-functional-linear-functionals.html:text/html}
}

@online{kidd_refactoring_2007,
	title = {Refactoring probability distributions, part 1: {PerhapsT}},
	url = {http://www.randomhacks.net/2007/02/21/refactoring-probability-distributions/},
	titleaddon = {Random Hacks},
	author = {Kidd, Eric},
	urldate = {2016-11-06},
	date = {2007-02-21}
}

@online{kmett_comment_2015,
	title = {Comment on: From monoids to near-semirings: the essence of {MonadPlus} and Alternative • /r/haskell},
	url = {https://www.reddit.com/r/haskell/comments/3dlz6b/from_monoids_to_nearsemirings_the_essence_of/ct6mr0g/},
	abstract = {The problem is that roughly half of the instances we have for {MonadPlus} and Alternative today do not satisfy the oidification of the right-seminearring laws mentioned here.
There are really two or more families of {MonadPlus} instances. There are those satisfying "left catch" and those with "left distribution" -- some satisfy both.
Maybe, {IO}, and almost anything that doesn't use a list or other source of non-determinism fails these law and fails them badly.
Most monad transformers preserve the "sense" of what {MonadPlus} law they inherit from the base monad, but then things like {EitherT} e, or variations on {ListT} change the meaning of ({\textless}{\textbar}{\textgreater})
It gets worse when you move to Applicative vs. Alternative, because then things like Backwards[1] have a right unit instead of a left one, and the extra structure afforded by Applicative makes the type enforced left unit law we had in {MonadPlus} becomes an arbitrary imposition, even less likely to hold as we can see with Backwards. =(
So this is definitely the essence of something nice to have, it just isn't the essence of the {MonadPlus} or Alternative classes we have today.},
	titleaddon = {reddit},
	author = {Kmett, Edward},
	urldate = {2016-11-06},
	date = {2015-07-17},
	file = {Snapshot:files/2117/ct6mr0g.html:text/html}
}

@inproceedings{fischer_reinventing_2009,
	title = {Reinventing Haskell Backtracking},
	url = {http://sebfisch.de/Reinventing.pdf},
	abstract = {Almost ten years ago, Ralf Hinze has written a functional pearl on how to derive backtracking functionality for the purely functional programming language Haskell. In these notes, we show how to...},
	eventtitle = {Informatik 2009: Im Focus das Leben, Beiträge der 39. Jahrestagung der Gesellschaft für Informatik e.V. ({GI}), 28.9.-2.10.2009, Lübeck, Proceedings},
	pages = {2875--2888},
	author = {Fischer, Sebastian and {others}},
	urldate = {2016-11-07},
	date = {2009},
	file = {[PDF] sebfisch.de:files/2131/Fischer - Reinventing Haskell Backtracking.pdf:application/pdf;Snapshot:files/2187/221384290_Reinventing_Haskell_Backtracking.html:text/html}
}

@incollection{bunkenburg_boom_1994,
	title = {The Boom Hierarchy},
	rights = {©1994 British Computer Society},
	isbn = {978-3-540-19879-6 978-1-4471-3236-3},
	url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.49.3252&rep=rep1&type=pdf},
	series = {Workshops in Computing},
	abstract = {The Boom Hierarchy is the family of data structures tree, list, bag, set. By combining their properties in other ways, more data structures can be made, like mobiles. The paper defines the data structures of this extended Boom Hierarchy and shows how the functions reduce, map, and filter are applied to them.},
	pages = {1--8},
	booktitle = {Functional Programming, Glasgow 1993},
	publisher = {Springer London},
	author = {Bunkenburg, Alexander},
	editor = {O’Donnell, John T. and Hammond, Kevin},
	urldate = {2016-11-07},
	date = {1994},
	langid = {english},
	note = {{DOI}: 10.1007/978-1-4471-3236-3\_1},
	keywords = {Programming Techniques},
	file = {10.1.1.49.3252.pdf:files/2148/10.1.1.49.3252.pdf:application/pdf;Snapshot:files/2147/10.html:text/html}
}

@article{schrijvers_monadic_2009,
	title = {Monadic constraint programming},
	volume = {19},
	issn = {1469-7653, 0956-7968},
	url = {http://homepages.inf.ed.ac.uk/wadler/topics/monads.html#constraints},
	doi = {10.1017/S0956796809990086},
	abstract = {{AbstractA} constraint programming system combines two essential components: a constraint solver and a search engine. The constraint solver reasons about satisfiability of conjunctions of constraints, and the search engine controls the search for solutions by iteratively exploring a disjunctive search tree defined by the constraint program. In this paper we give a monadic definition of constraint programming in which the solver is defined as a monad threaded through the monadic search tree. We are then able to define search and search strategies as first-class objects that can themselves be built or extended by composable search transformers. Search transformers give a powerful and unifying approach to viewing search in constraint programming, and the resulting constraint programming system is first class and extremely flexible.},
	pages = {663--697},
	number = {6},
	journaltitle = {Journal of Functional Programming},
	author = {Schrijvers, Tom and Stuckey, Peter and Wadler, Philip},
	urldate = {2016-11-07},
	date = {2009-11},
	file = {constraints.pdf:files/2152/constraints.pdf:application/pdf}
}

@article{lindley_idioms_2011,
	title = {Idioms are Oblivious, Arrows are Meticulous, Monads are Promiscuous},
	volume = {229},
	issn = {1571-0661},
	url = {http://homepages.inf.ed.ac.uk/wadler/topics/monads.html#arrows-and-idioms},
	doi = {10.1016/j.entcs.2011.02.018},
	series = {Proceedings of the Second Workshop on Mathematically Structured Functional Programming ({MSFP} 2008)},
	abstract = {We revisit the connection between three notions of computation: Moggiʼs monads, Hughesʼs arrows and {McBride} and Patersonʼs idioms (also called applicative functors). We show that idioms are equivalent to arrows that satisfy the type isomorphism A↝B≃1↝(A→B) and that monads are equivalent to arrows that satisfy the type isomorphism A↝B≃A→(1↝B). Further, idioms embed into arrows and arrows embed into monads.},
	pages = {97--117},
	number = {5},
	journaltitle = {Electronic Notes in Theoretical Computer Science},
	shortjournal = {Electronic Notes in Theoretical Computer Science},
	author = {Lindley, Sam and Wadler, Philip and Yallop, Jeremy},
	urldate = {2016-11-07},
	date = {2011-03-08},
	keywords = {applicative functors, arrows, idioms, monads},
	file = {arrows-and-idioms.pdf:files/2155/arrows-and-idioms.pdf:application/pdf}
}

@incollection{king_combining_1993,
	title = {Combining Monads},
	rights = {©1993 British Computer Society},
	isbn = {978-3-540-19820-8 978-1-4471-3215-8},
	url = {http://homepages.inf.ed.ac.uk/wadler/topics/monads.html#combining-monads},
	series = {Workshops in Computing},
	abstract = {Monads provide a way of structuring functional programs. Most real applications require a combination of primitive monads. Here we describe how some monads may be combined with others to yield a combined monad.},
	pages = {134--143},
	booktitle = {Functional Programming, Glasgow 1992},
	publisher = {Springer London},
	author = {King, David J. and Wadler, Philip},
	editor = {{MSc}, John Launchbury {MA} (Oxon) and (Hons), Patrick Sansom {BSc}},
	urldate = {2016-11-07},
	date = {1993},
	langid = {english},
	note = {{DOI}: 10.1007/978-1-4471-3215-8\_12},
	keywords = {Mathematical Logic and Formal Languages, Processor Architectures, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering, Software Engineering/Programming and Operating Systems},
	file = {monadscomb.ps:files/2159/monadscomb.ps:application/postscript}
}

@incollection{hutchison_typed_2012,
	location = {Berlin, Heidelberg},
	title = {Typed Tagless Final Interpreters},
	volume = {7470},
	isbn = {978-3-642-32201-3 978-3-642-32202-0},
	url = {http://okmij.org/ftp/tagless-final/course/lecture.pdf},
	abstract = {The so-called `typed tagless final' approach of Carette et al. has collected and polished a number of techniques for representing typed higher-order languages in a typed metalanguage, along with type-preserving interpretation, compilation and partial evaluation. The approach is an alternative to the traditional, or `initial' encoding of an object language as a (generalized) algebraic data type. Both approaches permit multiple interpretations of an expression, to evaluate it, pretty-print, etc. The final encoding represents all and only typed object terms without resorting to generalized algebraic data types, dependent or other fancy types. The final encoding lets us add new language forms and interpretations without breaking the existing terms and interpreters.},
	pages = {130--174},
	booktitle = {Generic and Indexed Programming},
	publisher = {Springer Berlin Heidelberg},
	author = {Kiselyov, Oleg},
	editor = {Gibbons, Jeremy},
	editorb = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
	editorbtype = {redactor},
	urldate = {2016-11-07},
	date = {2012},
	file = {lecture.pdf:files/2162/lecture.pdf:application/pdf}
}

@article{hirschowitz_modules_2010,
	title = {Modules over monads and initial semantics},
	volume = {208},
	issn = {0890-5401},
	url = {http://www.sciencedirect.com/science/article/pii/S0890540109002405},
	doi = {10.1016/j.ic.2009.07.003},
	series = {Special Issue: 14th Workshop on Logic, Language, Information and Computation ({WoLLIC} 2007)},
	abstract = {Inspired by the classical theory of modules over a monoid, we introduce the natural notion of module over a monad. The associated notion of morphism of left modules (“linear” natural transformations) captures an important property of compatibility with substitution, not only in the so-called homogeneous case but also in the heterogeneous case where “terms” and variables therein could be of different types. In this paper, we present basic constructions of modules and we show how modules allow a new point of view concerning higher-order syntax and semantics.},
	pages = {545--564},
	number = {5},
	journaltitle = {Information and Computation},
	shortjournal = {Information and Computation},
	author = {Hirschowitz, André and Maggesi, Marco},
	urldate = {2016-11-07},
	date = {2010-05-01},
	file = {1-s2.0-S0890540109002405-main.pdf:files/2177/1-s2.0-S0890540109002405-main.pdf:application/pdf;ScienceDirect Snapshot:files/2176/S0890540109002405.html:text/html}
}

@incollection{carette_finally_2007,
	title = {Finally Tagless, Partially Evaluated},
	rights = {©2007 Springer-Verlag Berlin Heidelberg},
	isbn = {978-3-540-76636-0 978-3-540-76637-7},
	url = {http://okmij.org/ftp/tagless-final/JFP.pdf},
	series = {Lecture Notes in Computer Science},
	abstract = {We have built the first family of tagless interpretations for a higher-order typed object language in a typed metalanguage (Haskell or {ML}) that require no dependent types, generalized algebraic data types, or postprocessing to eliminate tags. The statically type-preserving interpretations include an evaluator, a compiler (or staged evaluator), a partial evaluator, and call-by-name and call-by-value {CPS} transformers. Our main idea is to encode {HOAS} de Bruijn or higher-order abstract syntax using cogen functions rather than data constructors. In other words, we represent object terms not in an initial algebra but using the coalgebraic structure of the λ-calculus. Our representation also simulates inductive maps from types to types, which are required for typed partial evaluation and {CPS} transformations. Our encoding of an object term abstracts over the various ways to interpret it, yet statically assures that the interpreters never get stuck. To achieve self hyp interpretation and show Jones hyp optimality, we relate this exemplar of higher-rank and higher-kind polymorphism (provided by {ML} functors and Haskell 98 constructor classes) to plugging a term into a context of let hyp polymorphic bindings.},
	pages = {222--238},
	number = {4807},
	booktitle = {Programming Languages and Systems},
	publisher = {Springer Berlin Heidelberg},
	author = {Carette, Jacques and Kiselyov, Oleg and Shan, Chung-chieh},
	editor = {Shao, Zhong},
	urldate = {2016-11-07},
	date = {2007-11-29},
	langid = {english},
	note = {{DOI}: 10.1007/978-3-540-76637-7\_15},
	keywords = {Logics and Meanings of Programs, Mathematical Logic and Formal Languages, Operating Systems, Programming Languages, Compilers, Interpreters, Programming Techniques, Software Engineering},
	file = {JFP.pdf:files/2181/JFP.pdf:application/pdf;Snapshot:files/2180/10.html:text/html}
}

@online{doel_free_2015,
	title = {Free Monoids in Haskell},
	url = {http://comonad.com/reader/2015/free-monoids-in-haskell/},
	titleaddon = {The Comonad.Reader},
	author = {Doel, Dan},
	urldate = {2016-11-07},
	date = {2015-02-21},
	file = {Snapshot:files/2183/free-monoids-in-haskell.html:text/html}
}

@article{mytkowicz_data-parallel_2014,
	title = {Data-Parallel Finite-State Machines},
	url = {https://www.microsoft.com/en-us/research/publication/data-parallel-finite-state-machines/},
	abstract = {A finite-state machine ({FSM}) is an important abstraction for solving several problems, including regular-expression matching, tokenizing text, and Huffman decoding. {FSM} computations typically involve data-dependent iterations with unpredictable memory-access patterns making them difficult to parallelize. This paper describes a parallel algorithm for {FSMs} that breaks dependences across iterations by efficiently enumerating transitions from all possible …},
	journaltitle = {Microsoft Research},
	author = {Mytkowicz, Todd and Musuvathi, Madan and Schulte, Wolfram},
	urldate = {2016-11-08},
	date = {2014-03-01},
	file = {Full Text PDF:files/2190/Mytkowicz et al. - 2014 - Data-Parallel Finite-State Machines.pdf:application/pdf;Snapshot:files/2191/data-parallel-finite-state-machines.html:text/html}
}

@inproceedings{meertens_algorithmics_1986,
	title = {Algorithmics -- towards programming as a mathematical activity},
	url = {http://www.kestrel.edu/home/people/meertens/publications/papers/Algorithmics.pdf},
	shorttitle = {Algorithmics},
	eventtitle = {Proceedings of the {CWI} Symposium on Mathematics and Computer Science},
	pages = {289--334},
	booktitle = {Proceedings of the {CWI} Symposium on Mathematics and Computer Science},
	publisher = {North-Holland},
	author = {Meertens, Lambert},
	date = {1986},
	keywords = {rcb-bibfile},
	file = {Algorithmics.pdf:files/2197/Algorithmics.pdf:application/pdf}
}

@article{boom_further_1981,
	title = {Further thoughts on Abstracto},
	url = {http://www.kestrel.edu/home/people/meertens/publications/papers/Abstracto_reader.pdf},
	journaltitle = {Working Paper {ELC}-9, {IFIP} {WG} 2.1},
	author = {Boom, H. J.},
	date = {1981},
	file = {Abstracto_reader.pdf:files/2199/Abstracto_reader.pdf:application/pdf}
}

@online{piponi_mother_2008,
	title = {The Mother of all Monads},
	url = {http://blog.sigfpe.com/2008/12/mother-of-all-monads.html},
	abstract = {Suppose someone stole all the monads but one, which monad would you want it to be? If you're a Haskell programmer you wouldn't be too bother...},
	titleaddon = {A Neighborhood of Infinity},
	author = {Piponi, Dan},
	urldate = {2016-11-10},
	date = {2008-12-24},
	file = {Snapshot:files/2219/mother-of-all-monads.html:text/html}
}

@online{kmett_free_2011,
	title = {Free Monads for Less (Part 2 of 3): Yoneda},
	url = {http://comonad.com/reader/2011/free-monads-for-less-2/},
	titleaddon = {The Comonad.Reader},
	author = {Kmett, Edward},
	urldate = {2016-11-10},
	date = {2011-06-23},
	file = {Snapshot:files/2221/free-monads-for-less-2.html:text/html}
}