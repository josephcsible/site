
@inproceedings{bird_understanding_2013,
	title = {Understanding {Idiomatic} {Traversals} {Backwards} and {Forwards}},
	volume = {48},
	url = {http://www.cs.ox.ac.uk/jeremy.gibbons/publications/uitbaf.pdf},
	urldate = {2016-10-31},
	booktitle = {{ACM} {SIGPLAN} {Notices}},
	publisher = {ACM},
	author = {Bird, Richard and Gibbons, Jeremy and Mehner, Stefan and Schrijvers, Tom and Voigtlaender, Janis},
	year = {2013},
	pages = {25--36},
	file = {[PDF] ox.ac.uk:files/1193/Bird et al. - Understanding Idiomatic Traversals Backwards and F.pdf:application/pdf}
}

@inproceedings{okasaki_breadth-first_2000,
	address = {New York, NY, USA},
	series = {{ICFP} '00},
	title = {Breadth-first {Numbering}: {Lessons} from a {Small} {Exercise} in {Algorithm} {Design}},
	isbn = {978-1-58113-202-1},
	shorttitle = {Breadth-first {Numbering}},
	url = {https://www.cs.tufts.edu/~nr/cs257/archive/chris-okasaki/breadth-first.pdf},
	doi = {10.1145/351240.351253},
	abstract = {Every programmer has blind spots. Breadth-first numbering is an interesting toy problem that exposes a blind spot common to many---perhaps most---functional programmers.},
	urldate = {2018-02-17},
	booktitle = {Proceedings of the {Fifth} {ACM} {SIGPLAN} {International} {Conference} on {Functional} {Programming}},
	publisher = {ACM},
	author = {Okasaki, Chris},
	year = {2000},
	keywords = {Breadth-first numbering, breadth-first traversal, views},
	pages = {131--136},
	file = {ACM Full Text PDF:files/3295/Okasaki - 2000 - Breadth-first Numbering Lessons from a Small Exer.pdf:application/pdf}
}

@misc{gibbons_breadth-first_2015,
	title = {Breadth-{First} {Traversal}},
	url = {https://patternsinfp.wordpress.com/2015/03/05/breadth-first-traversal/},
	abstract = {Recently Eitan Chatav asked in the Programming Haskell group on Facebook What is the correct way to write breadth first traversal of a \$latex \{[{\textbackslash}mathsf\{Tree\}]\}\&fg=000000\$? He’s thinking o…},
	language = {en},
	urldate = {2018-03-16},
	journal = {Patterns in Functional Programming},
	author = {Gibbons, Jeremy},
	month = mar,
	year = {2015},
	file = {Snapshot:files/3563/breadth-first-traversal.html:text/html}
}

@techreport{jones_linear-time_1993,
	title = {Linear-time {Breadth}-first {Tree} {Algorithms}: {An} {Exercise} in the {Arithmetic} of {Folds} and {Zips}},
	shorttitle = {Linear-time breadth-first tree algorithms},
	url = {http://www.cs.ox.ac.uk/people/jeremy.gibbons/publications/linear.ps.gz},
	abstract = {This paper is about an application of the mathematics of the zip, reduce (fold) and accumulate (scan) operations on lists. It gives an account of the derivation of a linear-time breadth-first tree traversal algorithm, and of a subtle and efficient breadth-first tree labelling algorithm.},
	number = {71},
	institution = {Dept of Computer Science, University of Auckland},
	author = {Jones, Geraint and Gibbons, Jeremy},
	month = may,
	year = {1993},
	file = {Citeseer - Snapshot:files/3527/summary.html:text/html;Jones and Gibbons - 1993 - Linear-time Breadth-first Tree Algorithms An Exer.pdf:files/3569/Jones and Gibbons - 1993 - Linear-time Breadth-first Tree Algorithms An Exer.pdf:application/pdf}
}